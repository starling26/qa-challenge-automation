qa-challenge-automation/
│
├── 📁 .vscode/                          VSCode Configuration
│   ├── settings.json                    Editor settings, formatters, etc.
│   ├── extensions.json                  Recommended extensions list
│   ├── launch.json                      Debugging configurations
│   └── tasks.json                       Automated tasks (test, build, zip)
│
├── 📁 tests/                            Test Suite Directory
│   ├── contact-form.spec.ts             Contact form validation tests (12 tests)
│   ├── search.spec.ts                   (Template - create your own)
│   ├── cart.spec.ts                     (Template - create your own)
│   └── account.spec.ts                  (Template - create your own)
│
├── 📁 scripts/                          Utility Scripts
│   ├── create-zip.js                    Auto-create submission ZIP
│   └── setup-project.js                 Initial project setup (optional)
│
├── 📁 documentation/                    Project Documentation
│   ├── exercise1-template.md            Exercise 1 test cases template
│   ├── exercise2-template.md            Exercise 2 test cases template
│   ├── trello-structure.md              Trello board setup & examples
│   ├── quick-guide.md                   Quick execution guide (2-3 hours)
│   └── VSCODE-SETUP.md                  VS Code complete setup guide
│
├── 📁 screenshots/                      Test Evidence (create during testing)
│   ├── exercise1/
│   │   ├── navigation-bug.png
│   │   ├── mobile-responsive.png
│   │   └── form-validation.png
│   └── exercise2/
│       ├── search-results.png
│       ├── cart-issue.png
│       └── homepage-comparison.png
│
├── 📄 playwright.config.ts              Playwright configuration
├── 📄 tsconfig.json                     TypeScript configuration
├── 📄 package.json                      Dependencies and scripts
├── 📄 README.md                         Main project documentation
├── 📄 .gitignore                        Files to ignore in git
├── 📄 .prettierrc                       Code formatter rules (optional)
└── 📄 .eslintrc.json                    Code linting rules (optional)

📁 Auto-generated folders (ignored in git):
├── node_modules/                        Installed dependencies (DO NOT ZIP)
├── test-results/                        Test execution results (DO NOT ZIP)
├── playwright-report/                   HTML test reports (DO NOT ZIP)
└── playwright/.cache/                   Playwright browser cache (DO NOT ZIP)

📦 Submission file (generated):
└── magento-automation-suite.zip         Ready for submission

TOTAL FILE COUNT: ~15-20 files (before running tests)
TOTAL SIZE: ~500 KB (without node_modules)
ZIP SIZE: ~50-100 KB (ready for submission)

═══════════════════════════════════════════════════════════════
FILE DESCRIPTIONS:
═══════════════════════════════════════════════════════════════

📄 .vscode/settings.json
   - Editor configuration (format on save, tab size, etc.)
   - Playwright settings
   - File exclusions

📄 .vscode/extensions.json  
   - List of recommended VS Code extensions
   - Auto-prompt to install on project open

📄 .vscode/launch.json
   - Debug configurations
   - Run/debug options in VS Code

📄 .vscode/tasks.json
   - Quick tasks (Ctrl+Shift+P → Tasks: Run Task)
   - Test execution, ZIP creation, etc.

📄 tests/contact-form.spec.ts
   - 12 automated test cases for contact form
   - Validation, error handling, security tests
   - Ready to run out of the box

📄 scripts/create-zip.js
   - Node script to create submission ZIP
   - Automatically excludes unnecessary files
   - Works on Windows, Mac, and Linux

📄 documentation/*.md
   - Complete templates and guides
   - Copy-paste ready content
   - Step-by-step instructions

📄 playwright.config.ts
   - Test runner configuration
   - Browser settings (Chrome, Firefox, Safari)
   - Timeouts, retries, reports

📄 tsconfig.json
   - TypeScript compiler options
   - Project references

📄 package.json
   - Project metadata
   - Dependencies list
   - NPM scripts (test, report, etc.)

📄 README.md
   - Installation instructions
   - How to run tests
   - Project overview

📄 .gitignore
   - Prevents committing node_modules
   - Excludes test results
   - Keeps repo clean

═══════════════════════════════════════════════════════════════
COMMANDS QUICK REFERENCE:
═══════════════════════════════════════════════════════════════

🚀 Initial Setup:
   npm run setup                 Install everything

🧪 Run Tests:
   npm test                      Run all tests (headless)
   npm run test:headed           Run with browser visible
   npm run test:ui               Interactive UI mode
   npm run test:debug            Debug mode

🌐 Browser Specific:
   npm run test:chrome           Chrome only
   npm run test:firefox          Firefox only
   npm run test:safari           Safari only
   npm run test:all-browsers     All browsers

📊 Reports:
   npm run test:report           Open HTML report

🎨 Generate Tests:
   npm run test:codegen          Record new tests

📦 Create Submission:
   npm run create-zip            Create submission ZIP

🧹 Clean Project:
   npm run clean                 Remove node_modules, etc.

═══════════════════════════════════════════════════════════════
VS CODE SHORTCUTS:
═══════════════════════════════════════════════════════════════

F5                               Start debugging current file
Ctrl+Shift+B                     Run build/test task
Ctrl+Shift+P                     Command Palette
Ctrl+`                           Toggle terminal
Ctrl+Shift+D                     Debug panel
Ctrl+Shift+E                     File explorer
Ctrl+Shift+F                     Search in files
Ctrl+Shift+G                     Source control (Git)

═══════════════════════════════════════════════════════════════
PLAYWRIGHT TEST PANEL (Sidebar):
═══════════════════════════════════════════════════════════════

Click the Testing icon (beaker) in sidebar to see:
   - All test files
   - Individual tests
   - Run/debug buttons
   - Test results
   - Screenshots/videos on failure

═══════════════════════════════════════════════════════════════

For complete instructions, see:
   documentation/VSCODE-SETUP.md