name: 🚀 ParaBank E2E Tests - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Ejecutar tests automáticamente todos los días a las 6:00 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Permitir ejecución manual del workflow
    inputs:
      test_type:
        description: 'Tipo de tests a ejecutar'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - failing-only
          - contact-form
          - account-management
          - fund-transfer

env:
  BASE_URL: https://parabank.parasoft.com/parabank
  NODE_VERSION: '18'

jobs:
  # Job 1: Setup y preparación
  setup:
    name: 📋 Setup & Environment Check
    runs-on: ubuntu-latest
    outputs:
      should-run-tests: ${{ steps.check.outputs.should-run }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Check if tests should run
        id: check
        run: |
          echo "should-run=true" >> $GITHUB_OUTPUT
          echo "✅ Environment check completed"

      - name: 📊 Display workflow context
        run: |
          echo "🔥 Workflow: ${{ github.workflow }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "🎯 Event: ${{ github.event_name }}"
          echo "👤 Actor: ${{ github.actor }}"
          echo "🏷️ Test Type: ${{ github.event.inputs.test_type || 'all' }}"

  # Job 2: Tests principales en paralelo por categoría
  test-contact-form:
    name: 📝 Contact Form Tests
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run-tests == 'true'
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 📁 Create screenshots directory
        run: mkdir -p screenshots

      - name: 🧪 Run Contact Form Tests
        run: |
          if [[ "${{ github.event.inputs.test_type }}" == "failing-only" ]]; then
            npx playwright test --grep "TC0[38]|TC13:" --project=${{ matrix.browser }} --reporter=html
          else
            npx playwright test --grep "TC0[1-9]|TC1[0-3]" --project=${{ matrix.browser }} --reporter=html
          fi
        continue-on-error: true

      - name: 📸 Archive screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: contact-form-screenshots-${{ matrix.browser }}
          path: screenshots/
          retention-days: 30

      - name: 📊 Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: contact-form-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

  test-account-management:
    name: 🏦 Account Management Tests
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run-tests == 'true' && github.event.inputs.test_type != 'contact-form'
    strategy:
      matrix:
        browser: [chromium, firefox]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 📁 Create screenshots directory
        run: mkdir -p screenshots

      - name: 🧪 Run Account Management Tests
        run: |
          if [[ "${{ github.event.inputs.test_type }}" == "failing-only" ]]; then
            npx playwright test --grep "TC_AUTO_01[3-6]" --project=${{ matrix.browser }} --reporter=html
          else
            npx playwright test --grep "TC_AUTO_01[3-6]" --project=${{ matrix.browser }} --reporter=html
          fi
        continue-on-error: true

      - name: 📸 Archive screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: account-mgmt-screenshots-${{ matrix.browser }}
          path: screenshots/
          retention-days: 30

      - name: 📊 Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: account-mgmt-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

  test-fund-transfer:
    name: 💰 Fund Transfer Tests
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run-tests == 'true' && github.event.inputs.test_type != 'contact-form'
    strategy:
      matrix:
        browser: [chromium, webkit]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}

      - name: 📁 Create screenshots directory
        run: mkdir -p screenshots

      - name: 🧪 Run Fund Transfer Tests
        run: |
          if [[ "${{ github.event.inputs.test_type }}" == "failing-only" ]]; then
            npx playwright test --grep "TC_AUTO_01[78]" --project=${{ matrix.browser }} --reporter=html
          else
            npx playwright test --grep "TC_AUTO_01[7-9]|TC_AUTO_020" --project=${{ matrix.browser }} --reporter=html
          fi
        continue-on-error: true

      - name: 📸 Archive screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fund-transfer-screenshots-${{ matrix.browser }}
          path: screenshots/
          retention-days: 30

      - name: 📊 Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: fund-transfer-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

  # Job 3: Tests completos (solo si se selecciona 'all')
  test-full-suite:
    name: 🎯 Full Test Suite
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-run-tests == 'true' && (github.event.inputs.test_type == 'all' || github.event.inputs.test_type == '')
    strategy:
      matrix:
        browser: [chromium]
        shard: [1/3, 2/3, 3/3]
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright browsers
        run: npx playwright install --with-deps

      - name: 📁 Create screenshots directory
        run: mkdir -p screenshots

      - name: 🧪 Run All Tests (Sharded)
        run: |
          npx playwright test --shard=${{ matrix.shard }} --project=${{ matrix.browser }} --reporter=html
        continue-on-error: true

      - name: 📸 Archive screenshots
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: full-suite-screenshots-${{ matrix.browser }}-${{ matrix.shard }}
          path: screenshots/
          retention-days: 30

      - name: 📊 Upload test report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: full-suite-report-${{ matrix.browser }}-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 30

  # Job 4: Reporte consolidado y notificaciones
  report-results:
    name: 📊 Test Results & Notifications
    runs-on: ubuntu-latest
    needs: [test-contact-form, test-account-management, test-fund-transfer, test-full-suite]
    if: always()
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: 📋 Generate consolidated report
        run: |
          echo "# 🎭 ParaBank E2E Test Results" > test-summary.md
          echo "" >> test-summary.md
          echo "**Execution Date**: $(date)" >> test-summary.md
          echo "**Branch**: ${{ github.ref_name }}" >> test-summary.md
          echo "**Commit**: ${{ github.sha }}" >> test-summary.md
          echo "**Triggered by**: ${{ github.event_name }}" >> test-summary.md
          echo "" >> test-summary.md
          
          echo "## 📸 Screenshots Captured" >> test-summary.md
          find ./artifacts -name "*.png" -type f | wc -l | xargs echo "Total screenshots:" >> test-summary.md
          echo "" >> test-summary.md
          
          echo "## 🐛 Known Issues Documented" >> test-summary.md
          echo "- **TC08**: Phone field accepts alphabetic characters (Bug)" >> test-summary.md
          echo "- **TC03**: Invalid email format accepted (Bug)" >> test-summary.md
          echo "- **TC_AUTO_013-020**: Login credentials need update" >> test-summary.md
          echo "- **TC_AUTO_018**: Transfer validation incomplete" >> test-summary.md
          echo "" >> test-summary.md
          
          echo "## 📁 Artifacts Generated" >> test-summary.md
          ls -la ./artifacts/ >> test-summary.md

      - name: 📊 Upload consolidated report
        uses: actions/upload-artifact@v4
        with:
          name: test-summary-report
          path: test-summary.md
          retention-days: 90

      - name: 💬 Comment on PR (if applicable)
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('test-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  # Job 5: Deploy reports (opcional)
  deploy-reports:
    name: 🚀 Deploy Test Reports
    runs-on: ubuntu-latest
    needs: [report-results]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 📥 Download reports
        uses: actions/download-artifact@v4
        with:
          path: ./reports

      - name: 🌐 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./reports
          destination_dir: test-reports/${{ github.run_number }}

  # Job 6: Cleanup (opcional)
  cleanup:
    name: 🧹 Cleanup & Maintenance
    runs-on: ubuntu-latest
    needs: [deploy-reports]
    if: always()
    steps:
      - name: 🧹 Clean up old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const { data: artifacts } = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });
            
            const cutoff = new Date();
            cutoff.setDate(cutoff.getDate() - 7); // Keep only last 7 days
            
            for (const artifact of artifacts.artifacts) {
              if (new Date(artifact.created_at) < cutoff) {
                await github.rest.actions.deleteArtifact({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  artifact_id: artifact.id
                });
                console.log(`Deleted artifact: ${artifact.name}`);
              }
            }

      - name: ✅ Workflow completion
        run: |
          echo "🎉 CI/CD Pipeline completed successfully!"
          echo "📊 Check artifacts for test results and screenshots"
          echo "🐛 Known bugs have been documented automatically"
          echo "📈 Reports available in GitHub Pages (if enabled)"
